// @generated by protobuf-ts 2.9.1
// @generated from protobuf file "mls_validation/v1/service.proto" (package "xmtp.mls_validation.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ValidationApi } from "./service";
import type { ValidateGroupMessagesResponse } from "./service";
import type { ValidateGroupMessagesRequest } from "./service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ValidateKeyPackagesResponse } from "./service";
import type { ValidateKeyPackagesRequest } from "./service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * RPCs for the new MLS API
 *
 * @generated from protobuf service xmtp.mls_validation.v1.ValidationApi
 */
export interface IValidationApiClient {
    /**
     * Validates and parses a batch of key packages and returns relevant details
     *
     * @generated from protobuf rpc: ValidateKeyPackages(xmtp.mls_validation.v1.ValidateKeyPackagesRequest) returns (xmtp.mls_validation.v1.ValidateKeyPackagesResponse);
     */
    validateKeyPackages(input: ValidateKeyPackagesRequest, options?: RpcOptions): UnaryCall<ValidateKeyPackagesRequest, ValidateKeyPackagesResponse>;
    /**
     * Validates and parses a group message and returns relevant details
     *
     * @generated from protobuf rpc: ValidateGroupMessages(xmtp.mls_validation.v1.ValidateGroupMessagesRequest) returns (xmtp.mls_validation.v1.ValidateGroupMessagesResponse);
     */
    validateGroupMessages(input: ValidateGroupMessagesRequest, options?: RpcOptions): UnaryCall<ValidateGroupMessagesRequest, ValidateGroupMessagesResponse>;
}
/**
 * RPCs for the new MLS API
 *
 * @generated from protobuf service xmtp.mls_validation.v1.ValidationApi
 */
export class ValidationApiClient implements IValidationApiClient, ServiceInfo {
    typeName = ValidationApi.typeName;
    methods = ValidationApi.methods;
    options = ValidationApi.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * Validates and parses a batch of key packages and returns relevant details
     *
     * @generated from protobuf rpc: ValidateKeyPackages(xmtp.mls_validation.v1.ValidateKeyPackagesRequest) returns (xmtp.mls_validation.v1.ValidateKeyPackagesResponse);
     */
    validateKeyPackages(input: ValidateKeyPackagesRequest, options?: RpcOptions): UnaryCall<ValidateKeyPackagesRequest, ValidateKeyPackagesResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ValidateKeyPackagesRequest, ValidateKeyPackagesResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * Validates and parses a group message and returns relevant details
     *
     * @generated from protobuf rpc: ValidateGroupMessages(xmtp.mls_validation.v1.ValidateGroupMessagesRequest) returns (xmtp.mls_validation.v1.ValidateGroupMessagesResponse);
     */
    validateGroupMessages(input: ValidateGroupMessagesRequest, options?: RpcOptions): UnaryCall<ValidateGroupMessagesRequest, ValidateGroupMessagesResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<ValidateGroupMessagesRequest, ValidateGroupMessagesResponse>("unary", this._transport, method, opt, input);
    }
}
